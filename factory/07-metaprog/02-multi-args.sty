% == PACKAGES USED == %

\RequirePackage{xparse}


% == DEFINITIONS == %

% -- Multi-arguments (before/after and sep) -- %

% Source : the following lines come directly for the following post
%
%    * https://tex.stackexchange.com/a/475291/6880

\ExplSyntaxOn
% General purpose macro for defining other macros
%
% #1 : separator
% #2 : multiargument
% #3 : code before
% #4 : code between
% #5 : code after
    \NewDocumentCommand{\tns@multi@args}{mmmmmo}{
        \tnscom_multi@args:nnnnnn{#1}{#2}{#3}{#4}{#5}{#6}
    }
 
% Allocate a private variable
    \seq_new:N \l__tnscom_generic_seq

% The internal version of the general purpose macro
    \cs_new_protected:Nn \tnscom_multi@args:nnnnnn{
        % #1 : separator
        % #2 : multiargument
        % #3 : code before
        % #4 : code between
        % #5 : code after
        % #6 : ornament to items

        % A group allows nesting
        \group_begin:
            % Split the multi@argsument into parts
            \seq_set_split:Nnn \l__tnscom_generic_seq { #1 } { #2 }
            % Apply the ornament to the items
            \tl_if_novalue:nF { #6 }{
                \seq_set_eq:NN \l__tnscom_temp_seq \l__tnscom_generic_seq
                \seq_set_map:NNn \l__tnscom_generic_seq \l__tnscom_generic_seq { #6 }
            }
            % Execute the <code before>
            #3
            % Deliver the items, with the chosen material between them
            \seq_use:Nn \l__tnscom_generic_seq { #4 }
            % Execute the <code after>
            #5
            % End the group started at the beginning
        \group_end:
    }   



% -- Apply one macro to each part of a multi-arg -- %

% Source : the following lines come directly for the following post
%
%    * https://tex.stackexchange.com/a/557640/6880

    \NewExpandableDocumentCommand \tns@multi@apply@each { m+m } {
    	\mbc_tns@multi@apply@each:Nn #1 {#2} 
	}
    
    \cs_new:Npn \mbc_tns@multi@apply@each:Nn #1 #2 {
        \__mbc_tns@multi@apply@each:nNw { 0 } #1
          | \prg_do_nothing: #2 | \q_recursion_tail | \q_recursion_stop
   	}
    
    \cs_new:Npn \__mbc_tns@multi@apply@each:nNw #1 #2 | #3 | {
    	\exp_args:Nof \__mbc_tns@multi@apply@each:nnN {#3} { \int_eval:n {#1+1} } #2 
	}
    
    \cs_new:Npn \__mbc_tns@multi@apply@each:nnN #1 #2 #3 {
    	\quark_if_recursion_tail_stop:n {#1}
        \exp_not:n { #3 {#2} {\tl_trim_spaces:n {#1}} }
        \__mbc_tns@multi@apply@each:nNw {#2} #3 | \prg_do_nothing:
    }


% -- Apply one macro to each consecutive couple of a multi-arg -- %

    \NewExpandableDocumentCommand \tns@multi@apply@couple { m +m } {
    	\mbc_multiapply_pair:Nn #1 {#2}
	}
    
    \cs_new:Npn \mbc_multiapply_pair:Nn #1 #2 {
        \__mbc_multiapply_pair:nNw { 0 } #1
          | \prg_do_nothing: #2 | \q_recursion_tail | \q_recursion_stop
    }
    
    \cs_new:Npn \__mbc_multiapply_pair:nNw #1 #2 | #3 | {
    	\__mbc_multiapply_pair:nNww {#1} #2 | #3 | \prg_do_nothing:
	}
    
    \cs_new:Npn \__mbc_multiapply_pair:nNww #1 #2 | #3 | #4 | {	
    	\__mbc_multiapply_pair:oofN {#3} {#4} { \int_eval:n {#1+1} } #2
	}
    
    \cs_new:Npn \__mbc_multiapply_pair:nnnN #1 #2 #3 #4 {
        \quark_if_recursion_tail_stop:n {#2}
        \quark_if_recursion_tail_stop:n {#1}
        \exp_not:n { #4 {#3} {\tl_trim_spaces:n {#1}} {\tl_trim_spaces:n {#2}} }
        \__mbc_multiapply_pair:nNww {#3} #4 | \prg_do_nothing: #2 | \prg_do_nothing:
    }
    
    \cs_generate_variant:Nn \__mbc_multiapply_pair:nnnN { oof }
\ExplSyntaxOff
