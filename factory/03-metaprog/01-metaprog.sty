% == PACKAGES USED == %

\RequirePackage{amsmath}
\RequirePackage{relsize}
\RequirePackage{xparse}

\RequirePackage{tikz}
\usetikzlibrary{calc}

\RequirePackage{nicematrix}
\RequirePackage{xstring}


% == DEFINITIONS == %

% Meta tools - Apply same macro to all arguments

% #1      : main macro
% #2      : macro to apply to arguments
% #3 - #4 : the two arguments
\newcommand\tns@apply@macro@two@args[4]{%
    #1{#2{#3}}{#2{#4}}%
}


% Meta tools - Multi-arguments
%
% Source : the following lines come directly for the following post
%
%    * https://tex.stackexchange.com/a/475291/6880

\ExplSyntaxOn
% General purpose macro for defining other macros
%
% #1 : separator
% #2 : multiargument
% #3 : code before
% #4 : code between
% #5 : code after
    \NewDocumentCommand{\tns@multi@args}{mmmmmo}{
        \tnscom_multi@args:nnnnnn{#1}{#2}{#3}{#4}{#5}{#6}
    }
 
% Allocate a private variable
    \seq_new:N \l__tnscom_generic_seq

% The internal version of the general purpose macro
    \cs_new_protected:Nn \tnscom_multi@args:nnnnnn{
        % #1 : separator
        % #2 : multiargument
        % #3 : code before
        % #4 : code between
        % #5 : code after
        % #6 : ornament to items

        % A group allows nesting
        \group_begin:
         % Split the multi@argsument into parts
        \seq_set_split:Nnn \l__tnscom_generic_seq { #1 } { #2 }
        % Apply the ornament to the items
          \tl_if_novalue:nF { #6 }{
            \seq_set_eq:NN \l__tnscom_temp_seq \l__tnscom_generic_seq
            \seq_set_map:NNn \l__tnscom_generic_seq \l__tnscom_generic_seq { #6 }
           }
        % Execute the <code before>
          #3
        % Deliver the items, with the chosen material between them
          \seq_use:Nn \l__tnscom_generic_seq { #4 }
          % Execute the <code after>
         #5
          % End the group started at the beginning
          \group_end:
    }    
\ExplSyntaxOff


% Math tools - Deco over a math symbol

% #1 : the text over the symbol
% #2 : the symbol
\newcommand\tns@over@math@symbol[2]{%
	\mathrel{\overset{\mathrm{\text{\raisebox{.5ex}{#1}}}}{#2}}%
}


% Math tools - Intervals and co

\newcommand\tns@extra@vphantom{%
    \vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}}%
}


% #1 : left symbol
% #2 : 1st part
% #3 : 2nd part
% #4 : 3rd part
% #5 : right symbol
\newcommand\tns@generic@interval@semi@ext[5]{%
    \ensuremath{%
    	\left#1 \tns@extra@vphantom \right. \kern-.25em%
	    #2 #3 #4%
	    \left. \tns@extra@vphantom \kern-.05em \right#5%
	}%
}


% #1 : left symbol
% #2 : 1st part
% #3 : 2nd part
% #4 : 3rd part
% #5 : right symbol
\newcommand\tns@generic@interval@ext[5]{%
	\ensuremath{%
		\left#1 #2 #3 #4 \right#5%
	}%
}


% Math tools - Det in 2D

% Source
%    * F. Pantigny gives me good advices to use its great package nicematrix.
%    * https://tex.stackexchange.com/a/548662/6880
%
%   #1 : symbol for the product
%
%   #2  #3		x  x'
%   #4  #5      y  y'

\newcommand\tns@prop@prod[5]{
    #2 #1 #5 - #4 #1 #3%
}


%   #1 : option for the formatting
%
%   #2  #5		u  v
%   
%   #3  #6		x  x'
%   #4  #7      y  y'

\newcommand\tns@det@plane@no@deco[7]{%
    \IfEqCase{#1}{
        {vec}{
            \begin{vNiceMatrix}[first-row]
                {\scriptsize#2} & {\scriptsize#5} \\
        }{novec}{
                \begin{vNiceMatrix}
        }
    }
                #3 & #6 \\
                #4 & #7
            \end{vNiceMatrix}
}


\newcommand\tns@det@plane@deco[7]{%
    \IfEqCase{#1}{
        {vec}{
            \begin{vNiceMatrix}[first-row]
                {\scriptsize#2} && {\scriptsize#5} \\
        }{novec}{
                \begin{vNiceMatrix}
        }
    }
                    #3 && #6 \\
                    #4 && #7
                    %%
                    \CodeAfter
                    \begin{tikzpicture}
                        \path (1-1.east) 
                           -- node[below = 0.45em,
                                   red,
                                   circle,
                                   inner sep = 1.25pt] 
                              (minus) {\tiny$-$}
                              (1-3.west);
                        \draw [red,->]
                            let \p1 = ($(minus.east) - (minus.center)$) in 
                                ([xshift = 0.5mm]1-1.east)
                                to[out = 0, in = 137.5]
                                (minus.50)
                                arc[start angle = 50,
                                    end angle = -230,
                                    radius = \x1] 
                                to[out = 42.5, in =190]
                                ([xshift = -0.3mm]1-1.east-|1-3.west);
                \end{tikzpicture}   
            \end{vNiceMatrix}
}


