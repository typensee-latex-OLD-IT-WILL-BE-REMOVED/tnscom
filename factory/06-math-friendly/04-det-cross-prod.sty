% == PACKAGES USED == %

\RequirePackage{tikz}
\usetikzlibrary{calc, babel} % babel is unuseful here except that it changes the catcode of @.

\RequirePackage{nicematrix}
\RequirePackage{xstring}


% == DEFINITIONS == %

% -- 2D det & criteria of colinearity --%

% Abstraction

%   #1 : & or && (no deco or deco)
%
%   #2 : 1st vector
%   #3 : 2nd vector

\newcommand\tns@det@plane@open@with@vect[3]{%
    \begin{vNiceMatrix}[first-row]
        {\scriptsize#2} #1 {\scriptsize#3} \\
}  


%   #1 : option
%   #2 : & or && (no deco or deco)
%
%   #3 : 1st vector
%   #4 : 2nd vector

\newcommand\tns@det@plane@open[4]{%
    \IfEqCase{#1}{
        {vec}{
            \tns@det@plane@open@with@vect{#2}{#3}{#4}
        }{novec}{
            \begin{vNiceMatrix}
        }%
    }[%
        \PackageError{tnscom}{unknown value for 1st argument}%
                             {you can use vec or novec.}%
	]
}        


% Entries
%
%   #1 : & or && (no deco or deco)
%
%   #2  #4        x  x'
%   #3  #5        y  y'

\newcommand\tns@det@plane@entries[5]{%
    #2 #1 #4 \\
    #3 #1 #5
}        


%   #1 : vector or not
%
%   #2  #5        u  v
%   
%   #3  #6        x  x'
%   #4  #7        y  y'

\newcommand\tns@det@plane@no@deco[7]{%
    \tns@det@plane@open{#1}{&}{#2}{#5}
        \tns@det@plane@entries{&}{#3}{#4}{#6}{#7}
    \end{vNiceMatrix}
}


\newcommand\tns@det@plane@deco@abstract@loop{%
            	\begin{tikzpicture}
                	\path (1-1.east) 
	                   -- node[below = 0.45em,
    	                       red,
        	                   circle,
            	               inner sep = 1.25pt] 
                	      (minus) {\tiny$-$}
                    	  (1-3.west);
                	\draw [red,->]
                    	let \p1 = ($(minus.east) - (minus.center)$) in 
     	                   ([xshift = 0.5mm] 1-1.east)
        	                to[out = 0, in = 137.5]
            	            (minus.50)
                    	    arc[start angle = 50,
                	    end angle = -230,
	                    radius = \x1] 
	                        to[out = 42.5, in =190]
	                        ([xshift = -0.3mm] 1-1.east -| 1-3.west);
            	\end{tikzpicture}
}


\newcommand\tns@det@plane@deco@abstract@cross{%
            	\begin{tikzpicture}
                	\draw [red, <->]
						([xshift = 0.75mm]  1-1.mid east) 
	                 -- ([xshift = -0.75mm] 2-3.mid west);
                	\draw [red, <->]
						([xshift = 0.75mm]  2-1.mid east) 
	                 -- ([xshift = -0.75mm] 1-3.mid west);
            	\end{tikzpicture}
}


%   #1 : vector or not
%
%   #2  #5        u  v
%   
%   #3  #6        x  x'
%   #4  #7        y  y'
%
%   #8 : curved lines or not

\newcommand\tns@det@plane@deco@loop[7]{%
    \tns@det@plane@open{#1}{&&}{#2}{#5}
        \tns@det@plane@entries{&&}{#3}{#4}{#6}{#7}
       	%%
		\CodeAfter
        \tns@det@plane@deco@abstract@loop{}               
    \end{vNiceMatrix}
}

\newcommand\tns@det@plane@deco@cross[7]{%
    \tns@det@plane@open{#1}{&&}{#2}{#5}
        \tns@det@plane@entries{&&}{#3}{#4}{#6}{#7}
       	%%
		\CodeAfter
        \tns@det@plane@deco@abstract@cross{}               
    \end{vNiceMatrix}
}



% -- Cross product -- %

%   #1 : vector or not
%
%   #2  #6        u  v
%   
%   #3  #7        x  x'
%   #4  #8        y  y'
%   #5  #9        z  z'
%
% Source: https://tex.stackexchange.com/a/554468/6880

\newcommand\tns@cross@prod@deco@loop[9]{%
    \tns@det@plane@open{#1}{&&}{#2}{#6}%
        \tns@det@plane@entries{&&}{#3}{#4}{#7}{#8} \\
        %
        #5                && #9                    \\
        {\color{blue} #3} && {\color{blue} #7}
        %%
        \CodeAfter
        \begin{tikzpicture}
            \path (2-1.east) 
                  -- node[below = 0.3em,
                          blue,
                          circle,
                          inner sep = .4pt]
                     (minusone) {\csname tnsgeo@calc@crossprod@label\endcsname{1}}
                  (2-3.west);
            \draw [blue,->]
                  let \p1 = ($(minusone.east) - (minusone.center)$) in 
                      ([xshift = 0.5mm,yshift=-0.05mm]2-1.east)
                      to[out = 0, in = 137.5]
                      ([yshift=-0.05mm]minusone.50)
                      arc[start angle = 50,
                          end angle = -230,
                          radius = \x1] 
                      to[out = 42.5, in =190]
                      ([xshift = -0.3mm,yshift=-0.05mm]2-1.east-|2-3.west);
            %%
            \path (3-1.east) 
                  -- node[below = 0.3em,
                          red,
                          circle,
                          inner sep = .4pt] 
                     (minustwo) {\csname tnsgeo@calc@crossprod@label\endcsname{2}}
                  (3-3.west);
            \draw [red,->]
                  let \p1 = ($(minustwo.east) - (minustwo.center)$) in 
                      ([xshift=0.5mm,yshift=-0.6mm]3-1.east)
                      to[out = 0, in = 137.5]
                      ([yshift=-0.6mm]minustwo.50)
                      arc[start angle = 50,
                          end angle = -230,
                          radius = \x1] 
                      to[out = 42.5, in =190] 
                      ([xshift = -0.3mm,yshift=-0.6mm]3-1.east-|3-3.west);
            %%
            \path (1-1.east) 
                  -- node[below = 0.3em,
                          orange,
                          circle,
                          inner sep = .4pt] 
                     (minusthree) {\csname tnsgeo@calc@crossprod@label\endcsname{3}}
                  (1-3.west);
            \draw [orange,->]
                  let \p1 = ($(minusthree.east) - (minusthree.center)$) in 
                      ([xshift=0.5mm]1-1.east)
                      to[out = 0, in = 137.5]
                      (minusthree.50)
                      arc[start angle = 50,
                          end angle = -230,
                          radius = \x1] 
                      to[out = 42.5, in =190] 
                      ([xshift=-0.3mm]1-1.east-|1-3.west);
        \end{tikzpicture}
    \end{vNiceMatrix}
}


\newcommand\tns@cross@prod@deco@cross[9]{%
    \tns@det@plane@open{#1}{&&}{#2}{#6}%
        \tns@det@plane@entries{&&}{#3}{#4}{#7}{#8} \\
        %
        #5                && #9                    \\
        {\color{blue} #3} && {\color{blue} #7}
        %%
        \CodeAfter
        \begin{tikzpicture}
			\draw[blue]
				([xshift = 0.75mm , yshift = -0.25mm] 2-1.mid east)
				--
				([xshift = -0.75mm, yshift = 0.25mm]  3-3.mid west);
			\draw[blue]
				([xshift = 0.75mm , yshift = 0.25mm]  3-1.mid east)
				--
				([xshift = -0.75mm, yshift = -0.25mm] 2-3.mid west);
			%
			\draw[red]
				([xshift = 0.75mm , yshift = -0.25mm] 3-1.mid east)
				--
				([xshift = -0.75mm, yshift = 0.25mm]  4-3.mid west);
			\draw[red]
				([xshift = 0.75mm , yshift = 0.25mm]  4-1.mid east)
				--
				([xshift = -0.75mm, yshift = -0.25mm] 3-3.mid west);
			%
			\draw[orange]
				([xshift = 0.75mm , yshift = -0.25mm] 1-1.mid east)
				--
				([xshift = -0.75mm, yshift = 0.25mm]  2-3.mid west);
			\draw[orange]
				([xshift = 0.75mm , yshift = 0.25mm]  2-1.mid east)
				--
				([xshift = -0.75mm, yshift = -0.25mm] 1-3.mid west);
        \end{tikzpicture}
    \end{vNiceMatrix}
}


\newcommand\tns@cross@prod@no@deco[9]{%
    \tns@det@plane@open{#1}{&}{#2}{#6}%
        \tns@det@plane@entries{&}{#3}{#4}{#7}{#8} \\
        %
        #5                & #9                    \\
        {\color{blue} #3} & {\color{blue} #7}
    \end{vNiceMatrix}
}

